--- qemu-2.3.0/tcg/tcg-op.c	2015-04-27 10:08:27.000000000 -0400
+++ qemu-2.3.0/tcg/tcg-op.c	2016-11-20 22:27:28.656561385 -0500
@@ -25,6 +25,11 @@
 #include "tcg.h"
 #include "tcg-op.h"
 
+extern abi_ulong afl_entry_point, 
+          afl_start_code,  
+          afl_end_code;    
+
+
 /* Reduce the number of ifdefs below.  This assumes that all uses of
    TCGV_HIGH and TCGV_LOW are properly protected by a conditional that
    the compiler can eliminate.  */
@@ -280,6 +285,21 @@
     if (cond == TCG_COND_ALWAYS) {
         tcg_gen_br(l);
     } else if (cond != TCG_COND_NEVER) {
+	//Augmented Instrumentation
+        if (cond == TCG_COND_EQ || cond == TCG_COND_NE) {
+            uint32_t pc = (uint32_t)tcg_ctx.saved_pc;  
+	    if (pc > afl_start_code && pc < afl_end_code) { // and !afl_area_ptr
+		    TCGv_i32 tmp_pc = tcg_const_i32(pc);
+		    TCGv_i32 tmp_ret;
+		    tmp_ret = tcg_temp_new_i32();
+
+		    gen_helper_brcond_states_i32(tmp_ret, arg1, arg2, tmp_pc);
+		    tcg_temp_free_i32(tmp_ret);
+		    tcg_temp_free_i32(tmp_pc);
+	    }
+        }
+
+	//Regular brcond gen
         tcg_gen_op4ii_i32(INDEX_op_brcond_i32, arg1, arg2, cond, label_arg(l));
     }
 }
@@ -1097,6 +1117,21 @@
     if (cond == TCG_COND_ALWAYS) {
         tcg_gen_br(l);
     } else if (cond != TCG_COND_NEVER) {
+	//Augmented Instrumentation
+        if (cond == TCG_COND_EQ || cond == TCG_COND_NE) {
+            uint64_t pc = (uint64_t)tcg_ctx.saved_pc;  
+	    if (pc > afl_start_code && pc < afl_end_code) { // and !afl_area_ptr
+		    TCGv_i64 tmp_pc = tcg_const_i64(pc);
+		    TCGv_i64 tmp_ret;
+		    tmp_ret = tcg_temp_new_i64();
+		
+		    gen_helper_brcond_states_i64(tmp_ret, arg1, arg2, tmp_pc);
+		    tcg_temp_free_i64(tmp_ret);
+		    tcg_temp_free_i64(tmp_pc);
+	    }
+        }
+
+	//Regular brcond generation
         if (TCG_TARGET_REG_BITS == 32) {
             tcg_gen_op6ii_i32(INDEX_op_brcond2_i32, TCGV_LOW(arg1),
                               TCGV_HIGH(arg1), TCGV_LOW(arg2),
